// <auto-generated />
using System;
using GymTracker.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GymTracker.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240530200839_UsersTableCreated")]
    partial class UsersTableCreated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GymTracker.Domain.Entities.MuscleGroup", b =>
                {
                    b.Property<Guid>("MucleGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("muscle_group_id");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("group_name");

                    b.Property<string>("MuscleImage")
                        .HasColumnType("text")
                        .HasColumnName("muscle_image");

                    b.HasKey("MucleGroupId");

                    b.HasIndex("GroupName")
                        .IsUnique();

                    b.ToTable("muscle_groups");
                });

            modelBuilder.Entity("GymTracker.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<short>("BirthYear")
                        .HasColumnType("smallint")
                        .HasColumnName("birth_year");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<char>("Gender")
                        .HasColumnType("char(1)")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("password_hash");

                    b.Property<string>("PasswordRecoverCode")
                        .HasColumnType("char(5)")
                        .HasColumnName("password_recover_code");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("password_salt");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("text")
                        .HasColumnName("profile_photo");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
